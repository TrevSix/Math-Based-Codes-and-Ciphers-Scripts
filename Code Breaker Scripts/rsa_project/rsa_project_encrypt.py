import base64

def encrypt_rsa(plaintext, modulus, public_exponent):
    # Convert plaintext to byte representation
    byte_plaintext = plaintext.encode()

    # Convert byte representation to int
    int_plaintext = int.from_bytes(byte_plaintext, 'big')

    # Perform RSA encryption
    encrypted_text = pow(int_plaintext, public_exponent, modulus)

    # Convert encrypted int to byte representation
    byte_encrypted_text = encrypted_text.to_bytes((encrypted_text.bit_length() + 7) // 8, 'big')

    # Encode the encrypted byte representation to base64
    base64_encrypted_text = base64.b64encode(byte_encrypted_text)

    return base64_encrypted_text

# Example usage
public_key = "1024,144528875467717042791279632745781760699059783882524430604471185490494\
43734065366309406984211563054671722989357571450934143531536969195600854180\
630843745671633383564575026659198773792340613327192478729880885986203580396\
55526908587151468827454694346602240036827394320193172176195091407265252947\
77305688212103313583650658942501280364149652116209470379450762909435740823\
82287292740582850755401915223249128892574295216534852901808019106508223132\
31399549946433221600135373992461875149644948433781611141639393154502244882\
21856195170574431856886808022454996174729818195312054257265589018385333449\
819349012490730841856217336999,9785744448132152843127981215777173875244964\
34349357351729341242711422964385345867363008086095941287169743403220468772\
57573123334244471665259829730633603226220073247145530303981925410903291935\
38179583730270967783981165773233893703106726572417712860634673912081399816\
8835194068819951774559555721972826223763599"
plaintext = "Hello Prof. This class has been a blast. Thanks for an indepth and robust understanding of math based codes and ciphers."

# Parse public key string
length, modulus, public_exponent = map(int, public_key.split(','))

# Encrypt plaintext with RSA
encrypted_text = encrypt_rsa(plaintext, modulus, public_exponent)

print("Encrypted text:", encrypted_text)